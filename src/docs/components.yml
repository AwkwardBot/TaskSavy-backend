components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        key:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          enum: ['Pending', 'Working', 'Completed']
        activeStatus:
          type: string
          enum: ['Active', 'Archive', 'Deleted']
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'

    Member:
      type: object
      properties:
        userId:
          type: string
        role:
          type: string
          enum: ['Admin', 'Manager', 'Member']
    
    MemberDetail:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: ['Member', 'Manager', 'Admin']

    Tag:
      type: object
      properties:
        name:
          type: string

    Sprint:
      type: object
      properties:
        name: 
          type: string
        startDate: 
          type: date
        endDate: 
          type: date
        description: 
          type: string
        tasks:
          type: object
          items:
            $ref: '#/components/schemas/Tasks'
        
    Ticket:
      type: object
      properties:
        ticket_type_id:
          type: string
        projectId:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
      
      TicketsArray:
        type: array
        items:
          $ref: '#/components/schemas/Tickets'
          

    TicketType:
      type: object
      properties:
        ticket_type:
          type: object
          properties:
            name:
              type: string
            theme:
              type: object
              properties:
                bg:
                  type: string
                text:
                  type: string

      TicketTypeArray:
        type: array
        items:
          $ref: '#/components/schemas/TicketType'


    Requirement:
      type: object
      properties:
        projectId:
          type: string
          description: The ID of the project associated with the requirement
        module_name:
          type: string
          description: The name of the module
        requirements:
          type: array
          items:
            type: object
            properties:
              requirement:
                type: string
                description: The description of the requirement
              class:
                type: string
                description: The class/category of the requirement
              type:
                type: string
                enum: [functional, non-functional]
                description: The type of requirement (functional or non-functional)

    Workspace:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2023-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
    
    
      
    
  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

 
